// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TotalMedia.WebAPI.DAL;

#nullable disable

namespace TotalMedia.WebAPI.Migrations
{
    [DbContext(typeof(TotalMediaDbContext))]
    [Migration("20230305045116_CreatedCountriesTable")]
    partial class CreatedCountriesTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TotalMedia.WebAPI.Models.Country", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength();

                    b.Property<string>("Locale")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VATs")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.ToTable("Countries", (string)null);

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Currency = "EUR",
                            Locale = "fr-FR",
                            Name = "France",
                            VATs = "5.5;20;10"
                        },
                        new
                        {
                            Id = (byte)2,
                            Currency = "GBP",
                            Locale = "en-GB",
                            Name = "United Kingdom",
                            VATs = "5;20"
                        },
                        new
                        {
                            Id = (byte)3,
                            Currency = "EUR",
                            Locale = "pt-PT",
                            Name = "Portugal",
                            VATs = "6;13;23"
                        },
                        new
                        {
                            Id = (byte)4,
                            Currency = "EUR",
                            Locale = "es-ES",
                            Name = "Spain",
                            VATs = "21;10"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
